[2024-04-25T13:33:34.994+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-04-25T13:32:51.322992+00:00 [queued]>
[2024-04-25T13:33:35.007+0000] {taskinstance.py:1159} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-04-25T13:32:51.322992+00:00 [queued]>
[2024-04-25T13:33:35.007+0000] {taskinstance.py:1361} INFO - Starting attempt 2 of 2
[2024-04-25T13:33:35.024+0000] {taskinstance.py:1382} INFO - Executing <Task(DockerOperator): pyspark_consumer> on 2024-04-25 13:32:51.322992+00:00
[2024-04-25T13:33:35.032+0000] {standard_task_runner.py:57} INFO - Started process 3346 to run task
[2024-04-25T13:33:35.038+0000] {standard_task_runner.py:84} INFO - Running: ['***', 'tasks', 'run', 'kafka_spark_dag', 'pyspark_consumer', 'manual__2024-04-25T13:32:51.322992+00:00', '--job-id', '22', '--raw', '--subdir', 'DAGS_FOLDER/dag_kafka_spark.py', '--cfg-path', '/tmp/tmpe0q5fhg2']
[2024-04-25T13:33:35.042+0000] {standard_task_runner.py:85} INFO - Job 22: Subtask pyspark_consumer
[2024-04-25T13:33:35.110+0000] {task_command.py:416} INFO - Running <TaskInstance: kafka_spark_dag.pyspark_consumer manual__2024-04-25T13:32:51.322992+00:00 [running]> on host fe238196d269
[2024-04-25T13:33:35.215+0000] {taskinstance.py:1662} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='***' AIRFLOW_CTX_DAG_ID='kafka_spark_dag' AIRFLOW_CTX_TASK_ID='pyspark_consumer' AIRFLOW_CTX_EXECUTION_DATE='2024-04-25T13:32:51.322992+00:00' AIRFLOW_CTX_TRY_NUMBER='2' AIRFLOW_CTX_DAG_RUN_ID='manual__2024-04-25T13:32:51.322992+00:00'
[2024-04-25T13:33:35.243+0000] {docker.py:343} INFO - Starting docker container from image rappel-conso/spark:latest
[2024-04-25T13:33:35.248+0000] {docker.py:351} WARNING - Using remote engine or docker-in-docker and mounting temporary volume from host is not supported. Falling back to `mount_tmp_dir=False` mode. You can set `mount_tmp_dir` parameter to False to disable mounting and remove the warning
[2024-04-25T13:33:35.627+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m13:33:35.62 [0m[38;5;2mINFO [0m ==>
[2024-04-25T13:33:35.629+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m13:33:35.62 [0m[38;5;2mINFO [0m ==> [1mWelcome to the Bitnami spark container[0m
[2024-04-25T13:33:35.632+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m13:33:35.63 [0m[38;5;2mINFO [0m ==> Subscribe to project updates by watching [1mhttps://github.com/bitnami/containers[0m
[2024-04-25T13:33:35.634+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m13:33:35.63 [0m[38;5;2mINFO [0m ==> Submit issues and feature requests at [1mhttps://github.com/bitnami/containers/issues[0m
[2024-04-25T13:33:35.636+0000] {docker.py:413} INFO - [38;5;6mspark [38;5;5m13:33:35.63 [0m[38;5;2mINFO [0m ==>
[2024-04-25T13:33:35.647+0000] {docker.py:413} INFO - 
[2024-04-25T13:33:37.942+0000] {docker.py:413} INFO - :: loading settings :: url = jar:file:/opt/bitnami/spark/jars/ivy-2.5.1.jar!/org/apache/ivy/core/settings/ivysettings.xml
[2024-04-25T13:33:38.029+0000] {docker.py:413} INFO - Ivy Default Cache set to: /opt/bitnami/spark/.ivy2/cache
The jars for the packages stored in: /opt/bitnami/spark/.ivy2/jars
[2024-04-25T13:33:38.035+0000] {docker.py:413} INFO - org.postgresql#postgresql added as a dependency
org.apache.spark#spark-sql-kafka-0-10_2.12 added as a dependency
[2024-04-25T13:33:38.036+0000] {docker.py:413} INFO - :: resolving dependencies :: org.apache.spark#spark-submit-parent-ecc80e70-50ba-43e5-a26a-ffb38236cb90;1.0
	confs: [default]
[2024-04-25T13:33:38.667+0000] {docker.py:413} INFO - found org.postgresql#postgresql;42.5.4 in central
[2024-04-25T13:33:38.730+0000] {docker.py:413} INFO - found org.checkerframework#checker-qual;3.5.0 in central
[2024-04-25T13:33:39.511+0000] {docker.py:413} INFO - found org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 in central
[2024-04-25T13:33:39.864+0000] {docker.py:413} INFO - found org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 in central
[2024-04-25T13:33:39.926+0000] {docker.py:413} INFO - found org.apache.kafka#kafka-clients;3.4.1 in central
[2024-04-25T13:33:39.985+0000] {docker.py:413} INFO - found org.lz4#lz4-java;1.8.0 in central
[2024-04-25T13:33:40.041+0000] {docker.py:413} INFO - found org.xerial.snappy#snappy-java;1.1.10.3 in central
[2024-04-25T13:33:40.400+0000] {docker.py:413} INFO - found org.slf4j#slf4j-api;2.0.7 in central
[2024-04-25T13:33:40.642+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-runtime;3.3.4 in central
[2024-04-25T13:33:40.767+0000] {docker.py:413} INFO - found org.apache.hadoop#hadoop-client-api;3.3.4 in central
[2024-04-25T13:33:40.985+0000] {docker.py:413} INFO - found commons-logging#commons-logging;1.1.3 in central
[2024-04-25T13:33:41.094+0000] {docker.py:413} INFO - found com.google.code.findbugs#jsr305;3.0.0 in central
[2024-04-25T13:33:41.609+0000] {docker.py:413} INFO - found org.apache.commons#commons-pool2;2.11.1 in central
[2024-04-25T13:33:41.641+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/postgresql/postgresql/42.5.4/postgresql-42.5.4.jar ...
[2024-04-25T13:33:41.756+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.postgresql#postgresql;42.5.4!postgresql.jar (130ms)
[2024-04-25T13:33:41.792+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-sql-kafka-0-10_2.12/3.5.0/spark-sql-kafka-0-10_2.12-3.5.0.jar ...
[2024-04-25T13:33:41.834+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0!spark-sql-kafka-0-10_2.12.jar (75ms)
[2024-04-25T13:33:41.848+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/checkerframework/checker-qual/3.5.0/checker-qual-3.5.0.jar ...
[2024-04-25T13:33:41.873+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.checkerframework#checker-qual;3.5.0!checker-qual.jar (39ms)
[2024-04-25T13:33:41.887+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/spark/spark-token-provider-kafka-0-10_2.12/3.5.0/spark-token-provider-kafka-0-10_2.12-3.5.0.jar ...
[2024-04-25T13:33:41.904+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0!spark-token-provider-kafka-0-10_2.12.jar (28ms)
[2024-04-25T13:33:41.925+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/kafka/kafka-clients/3.4.1/kafka-clients-3.4.1.jar ...
[2024-04-25T13:33:42.136+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.kafka#kafka-clients;3.4.1!kafka-clients.jar (230ms)
[2024-04-25T13:33:42.149+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/com/google/code/findbugs/jsr305/3.0.0/jsr305-3.0.0.jar ...
[2024-04-25T13:33:42.163+0000] {docker.py:413} INFO - [SUCCESSFUL ] com.google.code.findbugs#jsr305;3.0.0!jsr305.jar (26ms)
[2024-04-25T13:33:42.178+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.11.1/commons-pool2-2.11.1.jar ...
[2024-04-25T13:33:42.193+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.commons#commons-pool2;2.11.1!commons-pool2.jar (28ms)
[2024-04-25T13:33:42.208+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-runtime/3.3.4/hadoop-client-runtime-3.3.4.jar ...
[2024-04-25T13:33:42.608+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-runtime;3.3.4!hadoop-client-runtime.jar (414ms)
[2024-04-25T13:33:42.622+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/lz4/lz4-java/1.8.0/lz4-java-1.8.0.jar ...
[2024-04-25T13:33:42.643+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.lz4#lz4-java;1.8.0!lz4-java.jar (34ms)
[2024-04-25T13:33:42.661+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/xerial/snappy/snappy-java/1.1.10.3/snappy-java-1.1.10.3.jar ...
[2024-04-25T13:33:42.696+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.xerial.snappy#snappy-java;1.1.10.3!snappy-java.jar(bundle) (51ms)
[2024-04-25T13:33:42.708+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/slf4j/slf4j-api/2.0.7/slf4j-api-2.0.7.jar ...
[2024-04-25T13:33:42.722+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.slf4j#slf4j-api;2.0.7!slf4j-api.jar (26ms)
[2024-04-25T13:33:42.737+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/org/apache/hadoop/hadoop-client-api/3.3.4/hadoop-client-api-3.3.4.jar ...
[2024-04-25T13:33:43.009+0000] {docker.py:413} INFO - [SUCCESSFUL ] org.apache.hadoop#hadoop-client-api;3.3.4!hadoop-client-api.jar (285ms)
[2024-04-25T13:33:43.023+0000] {docker.py:413} INFO - downloading https://repo1.maven.org/maven2/commons-logging/commons-logging/1.1.3/commons-logging-1.1.3.jar ...
[2024-04-25T13:33:43.037+0000] {docker.py:413} INFO - [SUCCESSFUL ] commons-logging#commons-logging;1.1.3!commons-logging.jar (27ms)
[2024-04-25T13:33:43.037+0000] {docker.py:413} INFO - :: resolution report :: resolve 3587ms :: artifacts dl 1412ms
[2024-04-25T13:33:43.037+0000] {docker.py:413} INFO - :: modules in use:
[2024-04-25T13:33:43.038+0000] {docker.py:413} INFO - com.google.code.findbugs#jsr305;3.0.0 from central in [default]
	commons-logging#commons-logging;1.1.3 from central in [default]
	org.apache.commons#commons-pool2;2.11.1 from central in [default]
	org.apache.hadoop#hadoop-client-api;3.3.4 from central in [default]
	org.apache.hadoop#hadoop-client-runtime;3.3.4 from central in [default]
[2024-04-25T13:33:43.038+0000] {docker.py:413} INFO - org.apache.kafka#kafka-clients;3.4.1 from central in [default]
	org.apache.spark#spark-sql-kafka-0-10_2.12;3.5.0 from central in [default]
	org.apache.spark#spark-token-provider-kafka-0-10_2.12;3.5.0 from central in [default]
	org.checkerframework#checker-qual;3.5.0 from central in [default]
	org.lz4#lz4-java;1.8.0 from central in [default]
[2024-04-25T13:33:43.038+0000] {docker.py:413} INFO - org.postgresql#postgresql;42.5.4 from central in [default]
	org.slf4j#slf4j-api;2.0.7 from central in [default]
	org.xerial.snappy#snappy-java;1.1.10.3 from central in [default]
[2024-04-25T13:33:43.039+0000] {docker.py:413} INFO - ---------------------------------------------------------------------
	|                  |            modules            ||   artifacts   |
	|       conf       | number| search|dwnlded|evicted|| number|dwnlded|
	---------------------------------------------------------------------
[2024-04-25T13:33:43.039+0000] {docker.py:413} INFO - |      default     |   13  |   13  |   13  |   0   ||   13  |   13  |
	---------------------------------------------------------------------
[2024-04-25T13:33:43.047+0000] {docker.py:413} INFO - :: retrieving :: org.apache.spark#spark-submit-parent-ecc80e70-50ba-43e5-a26a-ffb38236cb90
	confs: [default]
[2024-04-25T13:33:43.165+0000] {docker.py:413} INFO - 13 artifacts copied, 0 already retrieved (58001kB/118ms)
[2024-04-25T13:33:43.495+0000] {docker.py:413} INFO - 24/04/25 13:33:43 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
[2024-04-25T13:33:45.047+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SparkContext: Running Spark version 3.5.0
[2024-04-25T13:33:45.048+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SparkContext: OS info Linux, 6.5.0-1016-gcp, amd64
[2024-04-25T13:33:45.049+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SparkContext: Java version 17.0.10
[2024-04-25T13:33:45.107+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceUtils: ==============================================================
[2024-04-25T13:33:45.109+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceUtils: No custom resources configured for spark.driver.
[2024-04-25T13:33:45.111+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceUtils: ==============================================================
[2024-04-25T13:33:45.112+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SparkContext: Submitted application: PostgreSQL Connection with PySpark
[2024-04-25T13:33:45.213+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceProfile: Default ResourceProfile created, executor resources: Map(cores -> name: cores, amount: 1, script: , vendor: , memory -> name: memory, amount: 1024, script: , vendor: , offHeap -> name: offHeap, amount: 0, script: , vendor: ), task resources: Map(cpus -> name: cpus, amount: 1.0)
[2024-04-25T13:33:45.248+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceProfile: Limiting resource is cpu
[2024-04-25T13:33:45.251+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO ResourceProfileManager: Added ResourceProfile id: 0
[2024-04-25T13:33:45.443+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SecurityManager: Changing view acls to: spark
[2024-04-25T13:33:45.446+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SecurityManager: Changing modify acls to: spark
[2024-04-25T13:33:45.449+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SecurityManager: Changing view acls groups to:
[2024-04-25T13:33:45.453+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SecurityManager: Changing modify acls groups to:
[2024-04-25T13:33:45.458+0000] {docker.py:413} INFO - 24/04/25 13:33:45 INFO SecurityManager: SecurityManager: authentication disabled; ui acls disabled; users with view permissions: spark; groups with view permissions: EMPTY; users with modify permissions: spark; groups with modify permissions: EMPTY
[2024-04-25T13:33:46.416+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO Utils: Successfully started service 'sparkDriver' on port 32969.
[2024-04-25T13:33:46.526+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO SparkEnv: Registering MapOutputTracker
[2024-04-25T13:33:46.644+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO SparkEnv: Registering BlockManagerMaster
[2024-04-25T13:33:46.702+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO BlockManagerMasterEndpoint: Using org.apache.spark.storage.DefaultTopologyMapper for getting topology information
[2024-04-25T13:33:46.704+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO BlockManagerMasterEndpoint: BlockManagerMasterEndpoint up
[2024-04-25T13:33:46.712+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO SparkEnv: Registering BlockManagerMasterHeartbeat
[2024-04-25T13:33:46.758+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO DiskBlockManager: Created local directory at /tmp/blockmgr-a800baba-6ee2-42a2-9085-829993d1b7d4
[2024-04-25T13:33:46.792+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO MemoryStore: MemoryStore started with capacity 434.4 MiB
[2024-04-25T13:33:46.828+0000] {docker.py:413} INFO - 24/04/25 13:33:46 INFO SparkEnv: Registering OutputCommitCoordinator
[2024-04-25T13:33:47.104+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO JettyUtils: Start Jetty 0.0.0.0:4040 for SparkUI
[2024-04-25T13:33:47.235+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Successfully started service 'SparkUI' on port 4040.
[2024-04-25T13:33:47.336+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at spark://localhost:32969/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.337+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at spark://localhost:32969/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.337+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at spark://localhost:32969/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.338+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at spark://localhost:32969/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.338+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at spark://localhost:32969/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1714052025034
[2024-04-25T13:33:47.339+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at spark://localhost:32969/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.339+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at spark://localhost:32969/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1714052025034
[2024-04-25T13:33:47.339+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.340+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at spark://localhost:32969/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.340+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at spark://localhost:32969/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1714052025034
[2024-04-25T13:33:47.340+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at spark://localhost:32969/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1714052025034
[2024-04-25T13:33:47.341+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.341+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added JAR file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at spark://localhost:32969/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1714052025034
[2024-04-25T13:33:47.348+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.351+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.postgresql_postgresql-42.5.4.jar
[2024-04-25T13:33:47.379+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.382+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:47.393+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.395+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.checkerframework_checker-qual-3.5.0.jar
[2024-04-25T13:33:47.411+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.414+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:47.426+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1714052025034
[2024-04-25T13:33:47.427+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-04-25T13:33:47.468+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar at file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.469+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-04-25T13:33:47.485+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1714052025034
[2024-04-25T13:33:47.487+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.commons_commons-pool2-2.11.1.jar
[2024-04-25T13:33:47.506+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.507+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-04-25T13:33:47.618+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar at file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1714052025034
[2024-04-25T13:33:47.619+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.lz4_lz4-java-1.8.0.jar
[2024-04-25T13:33:47.633+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar at file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1714052025034
[2024-04-25T13:33:47.636+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-04-25T13:33:47.653+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar at file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1714052025034
[2024-04-25T13:33:47.655+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.slf4j_slf4j-api-2.0.7.jar
[2024-04-25T13:33:47.665+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar at file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:47.666+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-04-25T13:33:47.762+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO SparkContext: Added file file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar at file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1714052025034
[2024-04-25T13:33:47.763+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Utils: Copying /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/commons-logging_commons-logging-1.1.3.jar
[2024-04-25T13:33:47.946+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: Starting executor ID driver on host localhost
[2024-04-25T13:33:47.947+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: OS info Linux, 6.5.0-1016-gcp, amd64
[2024-04-25T13:33:47.949+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: Java version 17.0.10
[2024-04-25T13:33:47.964+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: Starting executor with user classpath (userClassPathFirst = false): ''
[2024-04-25T13:33:47.966+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: Created or updated repl class loader org.apache.spark.util.MutableURLClassLoader@23d3afa9 for default.
[2024-04-25T13:33:47.991+0000] {docker.py:413} INFO - 24/04/25 13:33:47 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.028+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:48.038+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:48.135+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-04-25T13:33:48.143+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1714052025034
[2024-04-25T13:33:48.147+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.commons_commons-pool2-2.11.1.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.commons_commons-pool2-2.11.1.jar
[2024-04-25T13:33:48.156+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1714052025034
[2024-04-25T13:33:48.160+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.postgresql_postgresql-42.5.4.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.postgresql_postgresql-42.5.4.jar
[2024-04-25T13:33:48.170+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1714052025034
[2024-04-25T13:33:48.171+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.slf4j_slf4j-api-2.0.7.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.slf4j_slf4j-api-2.0.7.jar
[2024-04-25T13:33:48.181+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1714052025034
[2024-04-25T13:33:48.195+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.kafka_kafka-clients-3.4.1.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-04-25T13:33:48.204+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.206+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/com.google.code.findbugs_jsr305-3.0.0.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-04-25T13:33:48.216+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.218+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.lz4_lz4-java-1.8.0.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.lz4_lz4-java-1.8.0.jar
[2024-04-25T13:33:48.233+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.237+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:48.245+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:48.293+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-04-25T13:33:48.315+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1714052025034
[2024-04-25T13:33:48.316+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/commons-logging_commons-logging-1.1.3.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/commons-logging_commons-logging-1.1.3.jar
[2024-04-25T13:33:48.325+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.327+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.checkerframework_checker-qual-3.5.0.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.checkerframework_checker-qual-3.5.0.jar
[2024-04-25T13:33:48.336+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching file:///opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1714052025034
[2024-04-25T13:33:48.341+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /opt/bitnami/spark/.ivy2/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-04-25T13:33:48.355+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.452+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO TransportClientFactory: Successfully created connection to localhost/127.0.0.1:32969 after 67 ms (0 ms spent in bootstraps)
[2024-04-25T13:33:48.466+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp7582655448070753590.tmp
[2024-04-25T13:33:48.537+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp7582655448070753590.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:48.546+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-token-provider-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-04-25T13:33:48.548+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching spark://localhost:32969/jars/org.slf4j_slf4j-api-2.0.7.jar with timestamp 1714052025034
[2024-04-25T13:33:48.549+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: Fetching spark://localhost:32969/jars/org.slf4j_slf4j-api-2.0.7.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp8245702416561326446.tmp
[2024-04-25T13:33:48.556+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp8245702416561326446.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.slf4j_slf4j-api-2.0.7.jar
[2024-04-25T13:33:48.568+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.slf4j_slf4j-api-2.0.7.jar to class loader default
[2024-04-25T13:33:48.569+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching spark://localhost:32969/jars/org.lz4_lz4-java-1.8.0.jar with timestamp 1714052025034
[2024-04-25T13:33:48.572+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: Fetching spark://localhost:32969/jars/org.lz4_lz4-java-1.8.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp6622486893915078749.tmp
[2024-04-25T13:33:48.599+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp6622486893915078749.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.lz4_lz4-java-1.8.0.jar
[2024-04-25T13:33:48.611+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.lz4_lz4-java-1.8.0.jar to class loader default
[2024-04-25T13:33:48.614+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:48.614+0000] {docker.py:413} INFO - 24/04/25 13:33:48 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp15333324507220205298.tmp
[2024-04-25T13:33:49.140+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp15333324507220205298.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar
[2024-04-25T13:33:49.163+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-runtime-3.3.4.jar to class loader default
[2024-04-25T13:33:49.165+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar with timestamp 1714052025034
[2024-04-25T13:33:49.166+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.xerial.snappy_snappy-java-1.1.10.3.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp17890324410669567839.tmp
[2024-04-25T13:33:49.203+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp17890324410669567839.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.xerial.snappy_snappy-java-1.1.10.3.jar
[2024-04-25T13:33:49.216+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.xerial.snappy_snappy-java-1.1.10.3.jar to class loader default
[2024-04-25T13:33:49.218+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar with timestamp 1714052025034
[2024-04-25T13:33:49.219+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.hadoop_hadoop-client-api-3.3.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp1641142682930605396.tmp
[2024-04-25T13:33:49.456+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp1641142682930605396.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-api-3.3.4.jar
[2024-04-25T13:33:49.475+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.hadoop_hadoop-client-api-3.3.4.jar to class loader default
[2024-04-25T13:33:49.477+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/com.google.code.findbugs_jsr305-3.0.0.jar with timestamp 1714052025034
[2024-04-25T13:33:49.481+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/com.google.code.findbugs_jsr305-3.0.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp5321787270065706221.tmp
[2024-04-25T13:33:49.484+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp5321787270065706221.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/com.google.code.findbugs_jsr305-3.0.0.jar
[2024-04-25T13:33:49.493+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/com.google.code.findbugs_jsr305-3.0.0.jar to class loader default
[2024-04-25T13:33:49.495+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.postgresql_postgresql-42.5.4.jar with timestamp 1714052025034
[2024-04-25T13:33:49.496+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.postgresql_postgresql-42.5.4.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp18125765564758881298.tmp
[2024-04-25T13:33:49.513+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp18125765564758881298.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.postgresql_postgresql-42.5.4.jar
[2024-04-25T13:33:49.525+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.postgresql_postgresql-42.5.4.jar to class loader default
[2024-04-25T13:33:49.526+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/commons-logging_commons-logging-1.1.3.jar with timestamp 1714052025034
[2024-04-25T13:33:49.528+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/commons-logging_commons-logging-1.1.3.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp6105254826366447565.tmp
[2024-04-25T13:33:49.531+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp6105254826366447565.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/commons-logging_commons-logging-1.1.3.jar
[2024-04-25T13:33:49.542+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/commons-logging_commons-logging-1.1.3.jar to class loader default
[2024-04-25T13:33:49.544+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:49.544+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp12171375749184699892.tmp
[2024-04-25T13:33:49.552+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp12171375749184699892.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar
[2024-04-25T13:33:49.562+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.spark_spark-sql-kafka-0-10_2.12-3.5.0.jar to class loader default
[2024-04-25T13:33:49.562+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.kafka_kafka-clients-3.4.1.jar with timestamp 1714052025034
[2024-04-25T13:33:49.564+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.kafka_kafka-clients-3.4.1.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp17955590660800125131.tmp
[2024-04-25T13:33:49.620+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp17955590660800125131.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.kafka_kafka-clients-3.4.1.jar
[2024-04-25T13:33:49.630+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.kafka_kafka-clients-3.4.1.jar to class loader default
[2024-04-25T13:33:49.631+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.apache.commons_commons-pool2-2.11.1.jar with timestamp 1714052025034
[2024-04-25T13:33:49.632+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.apache.commons_commons-pool2-2.11.1.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp11374571237016401516.tmp
[2024-04-25T13:33:49.639+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp11374571237016401516.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.commons_commons-pool2-2.11.1.jar
[2024-04-25T13:33:49.649+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.apache.commons_commons-pool2-2.11.1.jar to class loader default
[2024-04-25T13:33:49.651+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Fetching spark://localhost:32969/jars/org.checkerframework_checker-qual-3.5.0.jar with timestamp 1714052025034
[2024-04-25T13:33:49.652+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Fetching spark://localhost:32969/jars/org.checkerframework_checker-qual-3.5.0.jar to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp1637685262243903602.tmp
[2024-04-25T13:33:49.657+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/fetchFileTemp1637685262243903602.tmp has been previously copied to /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.checkerframework_checker-qual-3.5.0.jar
[2024-04-25T13:33:49.666+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Executor: Adding file:/tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/userFiles-1e1b5db4-92c8-47ef-b744-dadf31b8fd51/org.checkerframework_checker-qual-3.5.0.jar to class loader default
[2024-04-25T13:33:49.686+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO Utils: Successfully started service 'org.apache.spark.network.netty.NettyBlockTransferService' on port 40991.
[2024-04-25T13:33:49.688+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO NettyBlockTransferService: Server created on localhost:40991
[2024-04-25T13:33:49.691+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO BlockManager: Using org.apache.spark.storage.RandomBlockReplicationPolicy for block replication policy
[2024-04-25T13:33:49.705+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO BlockManagerMaster: Registering BlockManager BlockManagerId(driver, localhost, 40991, None)
[2024-04-25T13:33:49.717+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO BlockManagerMasterEndpoint: Registering block manager localhost:40991 with 434.4 MiB RAM, BlockManagerId(driver, localhost, 40991, None)
[2024-04-25T13:33:49.720+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO BlockManagerMaster: Registered BlockManager BlockManagerId(driver, localhost, 40991, None)
[2024-04-25T13:33:49.723+0000] {docker.py:413} INFO - 24/04/25 13:33:49 INFO BlockManager: Initialized BlockManager: BlockManagerId(driver, localhost, 40991, None)
[2024-04-25T13:33:51.058+0000] {docker.py:413} INFO - 2024-04-25 13:33:51,056:create_spark_session:INFO:Spark session created successfully
[2024-04-25T13:33:51.079+0000] {docker.py:413} INFO - 24/04/25 13:33:51 INFO SharedState: Setting hive.metastore.warehouse.dir ('null') to the value of spark.sql.warehouse.dir.
[2024-04-25T13:33:51.087+0000] {docker.py:413} INFO - 24/04/25 13:33:51 INFO SharedState: Warehouse path is 'file:/opt/bitnami/spark/spark-warehouse'.
[2024-04-25T13:33:56.734+0000] {docker.py:413} INFO - 2024-04-25 13:33:56,732:create_initial_dataframe:INFO:Initial dataframe created successfully
[2024-04-25T13:34:00.589+0000] {docker.py:413} INFO - 2024-04-25 13:34:00,583:start_streaming:INFO:Start streaming ...
[2024-04-25T13:34:01.734+0000] {docker.py:413} INFO - 2024-04-25 13:34:01,732:run:INFO:Callback Server Starting
[2024-04-25T13:34:01.739+0000] {docker.py:413} INFO - 2024-04-25 13:34:01,734:run:INFO:Socket listening on ('127.0.0.1', 46611)
[2024-04-25T13:34:01.782+0000] {docker.py:413} INFO - 24/04/25 13:34:01 INFO StateStoreCoordinatorRef: Registered StateStoreCoordinator endpoint
[2024-04-25T13:34:01.872+0000] {docker.py:413} INFO - 24/04/25 13:34:01 WARN ResolveWriteToStream: Temporary checkpoint location created which is deleted normally when the query didn't fail: /tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5. If it's required to delete it under any circumstances, please set spark.sql.streaming.forceDeleteTempCheckpointLocation to true. Important to know deleting temp checkpoint folder is best effort.
[2024-04-25T13:34:01.935+0000] {docker.py:413} INFO - 24/04/25 13:34:01 INFO ResolveWriteToStream: Checkpoint root file:///tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5 resolved to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5.
[2024-04-25T13:34:01.938+0000] {docker.py:413} INFO - 24/04/25 13:34:01 WARN ResolveWriteToStream: spark.sql.adaptive.enabled is not supported in streaming DataFrames/Datasets and will be disabled.
[2024-04-25T13:34:02.252+0000] {docker.py:413} INFO - 24/04/25 13:34:02 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/metadata using temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/.metadata.17f53c21-22bd-462d-9efd-753956318177.tmp
[2024-04-25T13:34:02.654+0000] {docker.py:413} INFO - 24/04/25 13:34:02 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/.metadata.17f53c21-22bd-462d-9efd-753956318177.tmp to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/metadata
[2024-04-25T13:34:02.842+0000] {docker.py:413} INFO - 24/04/25 13:34:02 INFO MicroBatchExecution: Starting [id = 962fa8a8-a11a-4d8f-ac9b-8f754ab0cce2, runId = 31be9b5b-b6c3-4b2a-86b3-9d4481b14453]. Use file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5 to store the query checkpoint.
[2024-04-25T13:34:02.981+0000] {docker.py:413} INFO - 24/04/25 13:34:02 INFO MicroBatchExecution: Reading table [org.apache.spark.sql.kafka010.KafkaSourceProvider$KafkaTable@c651bda] from DataSourceV2 named 'kafka' [org.apache.spark.sql.kafka010.KafkaSourceProvider@15a083d7]
[2024-04-25T13:34:03.143+0000] {docker.py:413} INFO - 24/04/25 13:34:03 INFO OffsetSeqLog: BatchIds found from listing:
[2024-04-25T13:34:03.162+0000] {docker.py:413} INFO - 24/04/25 13:34:03 INFO OffsetSeqLog: BatchIds found from listing:
[2024-04-25T13:34:03.164+0000] {docker.py:413} INFO - 24/04/25 13:34:03 INFO MicroBatchExecution: Starting new streaming query.
[2024-04-25T13:34:03.170+0000] {docker.py:413} INFO - 24/04/25 13:34:03 INFO MicroBatchExecution: Stream started from {}
[2024-04-25T13:34:04.945+0000] {docker.py:413} INFO - 24/04/25 13:34:04 INFO AdminClientConfig: AdminClientConfig values: 
	auto.include.jmx.reporter = true
	bootstrap.servers = [kafka:9092]
	client.dns.lookup = use_all_dns_ips
	client.id = 
	connections.max.idle.ms = 300000
	default.api.timeout.ms = 60000
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
[2024-04-25T13:34:05.406+0000] {docker.py:413} INFO - 24/04/25 13:34:05 WARN AdminClientConfig: These configurations '[key.deserializer, value.deserializer, enable.auto.commit, max.poll.records, auto.offset.reset]' were supplied but are not used yet.
[2024-04-25T13:34:05.421+0000] {docker.py:413} INFO - 24/04/25 13:34:05 INFO AppInfoParser: Kafka version: 3.4.1
[2024-04-25T13:34:05.432+0000] {docker.py:413} INFO - 24/04/25 13:34:05 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
[2024-04-25T13:34:05.434+0000] {docker.py:413} INFO - 24/04/25 13:34:05 INFO AppInfoParser: Kafka startTimeMs: 1714052045404
[2024-04-25T13:34:06.836+0000] {docker.py:413} INFO - 24/04/25 13:34:06 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/sources/0/0 using temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/sources/0/.0.d745fc5d-1d98-433e-8423-a319fa7b31ba.tmp
[2024-04-25T13:34:06.920+0000] {docker.py:413} INFO - 24/04/25 13:34:06 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/sources/0/.0.d745fc5d-1d98-433e-8423-a319fa7b31ba.tmp to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/sources/0/0
[2024-04-25T13:34:06.923+0000] {docker.py:413} INFO - 24/04/25 13:34:06 INFO KafkaMicroBatchStream: Initial offsets: {"rappel_conso":{"0":0}}
[2024-04-25T13:34:07.017+0000] {docker.py:413} INFO - 24/04/25 13:34:07 INFO CheckpointFileManager: Writing atomically to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/offsets/0 using temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/offsets/.0.775cf6fe-9786-41f4-84ea-1071e6e8bfbe.tmp
[2024-04-25T13:34:07.189+0000] {docker.py:413} INFO - 24/04/25 13:34:07 INFO CheckpointFileManager: Renamed temp file file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/offsets/.0.775cf6fe-9786-41f4-84ea-1071e6e8bfbe.tmp to file:/tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5/offsets/0
[2024-04-25T13:34:07.193+0000] {docker.py:413} INFO - 24/04/25 13:34:07 INFO MicroBatchExecution: Committed offsets for batch 0. Metadata OffsetSeqMetadata(0,1714052046965,Map(spark.sql.streaming.stateStore.providerClass -> org.apache.spark.sql.execution.streaming.state.HDFSBackedStateStoreProvider, spark.sql.streaming.join.stateFormatVersion -> 2, spark.sql.streaming.stateStore.compression.codec -> lz4, spark.sql.streaming.stateStore.rocksdb.formatVersion -> 5, spark.sql.streaming.statefulOperator.useStrictDistribution -> true, spark.sql.streaming.flatMapGroupsWithState.stateFormatVersion -> 2, spark.sql.streaming.multipleWatermarkPolicy -> min, spark.sql.streaming.aggregation.stateFormatVersion -> 2, spark.sql.shuffle.partitions -> 200))
[2024-04-25T13:34:08.185+0000] {docker.py:413} INFO - 24/04/25 13:34:08 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-04-25T13:34:08.322+0000] {docker.py:413} INFO - 24/04/25 13:34:08 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-04-25T13:34:08.553+0000] {docker.py:413} INFO - 24/04/25 13:34:08 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-04-25T13:34:08.559+0000] {docker.py:413} INFO - 24/04/25 13:34:08 INFO KafkaOffsetReaderAdmin: Partitions added: Map()
[2024-04-25T13:34:08.599+0000] {docker.py:413} INFO - 24/04/25 13:34:08 WARN SparkStringUtils: Truncated the string representation of a plan since it was too large. This behavior can be adjusted by setting 'spark.sql.debug.maxToStringFields'.
[2024-04-25T13:34:09.550+0000] {docker.py:413} INFO - 24/04/25 13:34:09 INFO CodeGenerator: Code generated in 587.506805 ms
[2024-04-25T13:34:09.913+0000] {docker.py:413} INFO - 2024-04-25 13:34:09,912:wait_for_commands:INFO:Python Server ready to receive messages
[2024-04-25T13:34:09.914+0000] {docker.py:413} INFO - 2024-04-25 13:34:09,912:wait_for_commands:INFO:Received command c on object id p0
[2024-04-25T13:34:11.062+0000] {docker.py:413} INFO - 24/04/25 13:34:11 INFO CodeGenerator: Code generated in 245.308306 ms
[2024-04-25T13:34:11.146+0000] {docker.py:413} INFO - 24/04/25 13:34:11 INFO CodeGenerator: Code generated in 53.338786 ms
[2024-04-25T13:34:11.307+0000] {docker.py:413} INFO - 24/04/25 13:34:11 INFO CodeGenerator: Code generated in 140.862841 ms
[2024-04-25T13:34:12.067+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO CodeGenerator: Code generated in 38.777149 ms
[2024-04-25T13:34:12.093+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO CodeGenerator: Code generated in 21.773592 ms
[2024-04-25T13:34:12.529+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO SparkContext: Starting job: start at NativeMethodAccessorImpl.java:0
[2024-04-25T13:34:12.570+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Registering RDD 11 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 1
[2024-04-25T13:34:12.641+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Registering RDD 7 (start at NativeMethodAccessorImpl.java:0) as input to shuffle 0
[2024-04-25T13:34:12.654+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Got job 0 (start at NativeMethodAccessorImpl.java:0) with 200 output partitions
24/04/25 13:34:12 INFO DAGScheduler: Final stage: ResultStage 2 (start at NativeMethodAccessorImpl.java:0)
[2024-04-25T13:34:12.655+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Parents of final stage: List(ShuffleMapStage 0, ShuffleMapStage 1)
[2024-04-25T13:34:12.662+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Missing parents: List(ShuffleMapStage 0, ShuffleMapStage 1)
[2024-04-25T13:34:12.680+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO DAGScheduler: Submitting ShuffleMapStage 0 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-04-25T13:34:12.944+0000] {docker.py:413} INFO - 24/04/25 13:34:12 INFO MemoryStore: Block broadcast_0 stored as values in memory (estimated size 14.0 KiB, free 434.4 MiB)
[2024-04-25T13:34:13.005+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO MemoryStore: Block broadcast_0_piece0 stored as bytes in memory (estimated size 7.4 KiB, free 434.4 MiB)
[2024-04-25T13:34:13.010+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO BlockManagerInfo: Added broadcast_0_piece0 in memory on localhost:40991 (size: 7.4 KiB, free: 434.4 MiB)
[2024-04-25T13:34:13.018+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO SparkContext: Created broadcast 0 from broadcast at DAGScheduler.scala:1580
[2024-04-25T13:34:13.042+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 0 (MapPartitionsRDD[11] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-04-25T13:34:13.043+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO TaskSchedulerImpl: Adding task set 0.0 with 1 tasks resource profile 0
[2024-04-25T13:34:13.082+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO DAGScheduler: Submitting ShuffleMapStage 1 (MapPartitionsRDD[7] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-04-25T13:34:13.099+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO MemoryStore: Block broadcast_1 stored as values in memory (estimated size 52.0 KiB, free 434.3 MiB)
[2024-04-25T13:34:13.104+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO MemoryStore: Block broadcast_1_piece0 stored as bytes in memory (estimated size 17.8 KiB, free 434.3 MiB)
[2024-04-25T13:34:13.105+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO BlockManagerInfo: Added broadcast_1_piece0 in memory on localhost:40991 (size: 17.8 KiB, free: 434.4 MiB)
[2024-04-25T13:34:13.106+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO SparkContext: Created broadcast 1 from broadcast at DAGScheduler.scala:1580
[2024-04-25T13:34:13.109+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO DAGScheduler: Submitting 1 missing tasks from ShuffleMapStage 1 (MapPartitionsRDD[7] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0))
[2024-04-25T13:34:13.110+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO TaskSchedulerImpl: Adding task set 1.0 with 1 tasks resource profile 0
[2024-04-25T13:34:13.163+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO TaskSetManager: Starting task 0.0 in stage 0.0 (TID 0) (localhost, executor driver, partition 0, PROCESS_LOCAL, 9967 bytes)
[2024-04-25T13:34:13.216+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO TaskSetManager: Starting task 0.0 in stage 1.0 (TID 1) (localhost, executor driver, partition 0, PROCESS_LOCAL, 11061 bytes)
[2024-04-25T13:34:13.218+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO Executor: Running task 0.0 in stage 0.0 (TID 0)
[2024-04-25T13:34:13.225+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO Executor: Running task 0.0 in stage 1.0 (TID 1)
[2024-04-25T13:34:13.662+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO CodeGenerator: Code generated in 21.208468 ms
[2024-04-25T13:34:13.758+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO CodeGenerator: Code generated in 72.474566 ms
[2024-04-25T13:34:13.773+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO CodeGenerator: Code generated in 174.818266 ms
[2024-04-25T13:34:13.825+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO JDBCRDD: closed connection
[2024-04-25T13:34:13.953+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO Executor: Finished task 0.0 in stage 0.0 (TID 0). 1814 bytes result sent to driver
[2024-04-25T13:34:13.985+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO CodeGenerator: Code generated in 200.843784 ms
[2024-04-25T13:34:13.999+0000] {docker.py:413} INFO - 24/04/25 13:34:13 INFO TaskSetManager: Finished task 0.0 in stage 0.0 (TID 0) in 873 ms on localhost (executor driver) (1/1)
[2024-04-25T13:34:14.005+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO TaskSchedulerImpl: Removed TaskSet 0.0, whose tasks have all completed, from pool
[2024-04-25T13:34:14.094+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO DAGScheduler: ShuffleMapStage 0 (start at NativeMethodAccessorImpl.java:0) finished in 1.314 s
[2024-04-25T13:34:14.099+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO CodeGenerator: Code generated in 103.073548 ms
[2024-04-25T13:34:14.107+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO DAGScheduler: looking for newly runnable stages
[2024-04-25T13:34:14.111+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO DAGScheduler: running: Set(ShuffleMapStage 1)
[2024-04-25T13:34:14.112+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO DAGScheduler: waiting: Set(ResultStage 2)
[2024-04-25T13:34:14.116+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO DAGScheduler: failed: Set()
[2024-04-25T13:34:14.120+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO KafkaBatchReaderFactory: Creating Kafka reader topicPartition=rappel_conso-0 fromOffset=0 untilOffset=21156, for query queryId=962fa8a8-a11a-4d8f-ac9b-8f754ab0cce2 batchId=0 taskId=1 partitionId=0
[2024-04-25T13:34:14.254+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO CodeGenerator: Code generated in 33.522353 ms
[2024-04-25T13:34:14.362+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO CodeGenerator: Code generated in 62.029005 ms
[2024-04-25T13:34:14.428+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO ConsumerConfig: ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = none
	bootstrap.servers = [kafka:9092]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor
	group.instance.id = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.ByteArrayDeserializer
[2024-04-25T13:34:14.570+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO AppInfoParser: Kafka version: 3.4.1
[2024-04-25T13:34:14.572+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO AppInfoParser: Kafka commitId: 8a516edc2755df89
24/04/25 13:34:14 INFO AppInfoParser: Kafka startTimeMs: 1714052054565
[2024-04-25T13:34:14.574+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Assigned to partition(s): rappel_conso-0
[2024-04-25T13:34:14.601+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 0 for partition rappel_conso-0
[2024-04-25T13:34:14.626+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting the last seen epoch of partition rappel_conso-0 to 0 since the associated topicId changed from null to PcKLkzc3SEixfiye3_5m0w
[2024-04-25T13:34:14.630+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO Metadata: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Cluster ID: Pe_yHPgeSfOGp_qQkVz9dQ
[2024-04-25T13:34:14.810+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:14.868+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:14.869+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:14.876+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:14.964+0000] {docker.py:413} INFO - 24/04/25 13:34:14 INFO BlockManagerInfo: Removed broadcast_0_piece0 on localhost:40991 in memory (size: 7.4 KiB, free: 434.4 MiB)
[2024-04-25T13:34:15.980+0000] {docker.py:413} INFO - 24/04/25 13:34:15 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 500 for partition rappel_conso-0
[2024-04-25T13:34:15.994+0000] {docker.py:413} INFO - 24/04/25 13:34:15 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.037+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.052+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.197+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 721 for partition rappel_conso-0
[2024-04-25T13:34:16.209+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.216+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.218+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.224+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.572+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 1221 for partition rappel_conso-0
[2024-04-25T13:34:16.581+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.592+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.593+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.599+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.632+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 1332 for partition rappel_conso-0
[2024-04-25T13:34:16.641+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.648+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.651+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.662+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.804+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 1832 for partition rappel_conso-0
[2024-04-25T13:34:16.814+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.851+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.855+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.861+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.873+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 1893 for partition rappel_conso-0
[2024-04-25T13:34:16.889+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:16.899+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:16.902+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:16.909+0000] {docker.py:413} INFO - 24/04/25 13:34:16 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.012+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 2393 for partition rappel_conso-0
[2024-04-25T13:34:17.027+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.066+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.067+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.072+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.137+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 2469 for partition rappel_conso-0
[2024-04-25T13:34:17.272+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.273+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.274+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.275+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.286+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 2969 for partition rappel_conso-0
[2024-04-25T13:34:17.292+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.324+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.337+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 3047 for partition rappel_conso-0
[2024-04-25T13:34:17.352+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.365+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.380+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.597+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 3547 for partition rappel_conso-0
[2024-04-25T13:34:17.605+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.630+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.634+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.637+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.641+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 3588 for partition rappel_conso-0
[2024-04-25T13:34:17.651+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.655+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.657+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.661+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.712+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 4088 for partition rappel_conso-0
[2024-04-25T13:34:17.714+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.731+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.731+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.736+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.743+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 4140 for partition rappel_conso-0
[2024-04-25T13:34:17.747+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.750+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.751+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.754+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.803+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 4640 for partition rappel_conso-0
[2024-04-25T13:34:17.808+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.823+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.824+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.829+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 4722 for partition rappel_conso-0
[2024-04-25T13:34:17.833+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.838+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.841+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.845+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.888+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 5222 for partition rappel_conso-0
[2024-04-25T13:34:17.892+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.911+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.913+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.916+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 5271 for partition rappel_conso-0
[2024-04-25T13:34:17.920+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:17.923+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.925+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:17.927+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:17.976+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 5771 for partition rappel_conso-0
[2024-04-25T13:34:17.983+0000] {docker.py:413} INFO - 24/04/25 13:34:17 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.009+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.010+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.015+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.025+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 5845 for partition rappel_conso-0
[2024-04-25T13:34:18.031+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.038+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.040+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.046+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.097+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 6345 for partition rappel_conso-0
[2024-04-25T13:34:18.105+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.122+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.124+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.131+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.145+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 6423 for partition rappel_conso-0
[2024-04-25T13:34:18.152+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.157+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.159+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.161+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.235+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 6923 for partition rappel_conso-0
[2024-04-25T13:34:18.244+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.253+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.255+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.257+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.272+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 7003 for partition rappel_conso-0
[2024-04-25T13:34:18.280+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.284+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.286+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.294+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.410+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 7503 for partition rappel_conso-0
[2024-04-25T13:34:18.413+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.437+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.440+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.446+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.453+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 7547 for partition rappel_conso-0
[2024-04-25T13:34:18.459+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.466+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.468+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.472+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.581+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 8047 for partition rappel_conso-0
24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.608+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.612+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.616+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.631+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 8096 for partition rappel_conso-0
[2024-04-25T13:34:18.642+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.651+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.652+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.676+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.875+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 8596 for partition rappel_conso-0
[2024-04-25T13:34:18.884+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.916+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.918+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.933+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.966+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 8682 for partition rappel_conso-0
[2024-04-25T13:34:18.976+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:18.981+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:18.984+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:18.993+0000] {docker.py:413} INFO - 24/04/25 13:34:18 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.135+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 9182 for partition rappel_conso-0
[2024-04-25T13:34:19.139+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.150+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.153+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.163+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.164+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 9191 for partition rappel_conso-0
[2024-04-25T13:34:19.174+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.179+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.183+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.189+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.303+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 9691 for partition rappel_conso-0
[2024-04-25T13:34:19.312+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.333+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.336+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.345+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.353+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 9742 for partition rappel_conso-0
[2024-04-25T13:34:19.361+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.365+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.366+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.372+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.455+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 10242 for partition rappel_conso-0
[2024-04-25T13:34:19.465+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.475+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.477+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.482+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.491+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 10290 for partition rappel_conso-0
[2024-04-25T13:34:19.500+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.505+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.506+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.512+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.575+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 10790 for partition rappel_conso-0
[2024-04-25T13:34:19.582+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.594+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.594+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.599+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.613+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 10858 for partition rappel_conso-0
[2024-04-25T13:34:19.620+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.626+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.627+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.632+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.705+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 11358 for partition rappel_conso-0
[2024-04-25T13:34:19.710+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.720+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.722+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.726+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.735+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 11410 for partition rappel_conso-0
[2024-04-25T13:34:19.739+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.744+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.746+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.752+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.834+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 11910 for partition rappel_conso-0
[2024-04-25T13:34:19.841+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.862+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.871+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.878+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 11955 for partition rappel_conso-0
[2024-04-25T13:34:19.893+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.903+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.904+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.911+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.963+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 12455 for partition rappel_conso-0
[2024-04-25T13:34:19.967+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:19.988+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:19.991+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:19.997+0000] {docker.py:413} INFO - 24/04/25 13:34:19 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.003+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 12506 for partition rappel_conso-0
[2024-04-25T13:34:20.011+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.024+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.027+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.029+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.074+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 13004 for partition rappel_conso-0
[2024-04-25T13:34:20.087+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.088+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.166+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 13504 for partition rappel_conso-0
[2024-04-25T13:34:20.175+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.195+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.197+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.202+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.209+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 13530 for partition rappel_conso-0
[2024-04-25T13:34:20.215+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.220+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.223+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.226+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.302+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 14030 for partition rappel_conso-0
[2024-04-25T13:34:20.305+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.314+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.317+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.319+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.323+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 14066 for partition rappel_conso-0
[2024-04-25T13:34:20.327+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.331+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.333+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.337+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.390+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 14566 for partition rappel_conso-0
[2024-04-25T13:34:20.395+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.405+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.407+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.411+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.415+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 14575 for partition rappel_conso-0
[2024-04-25T13:34:20.419+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.424+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.426+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.431+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.468+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 15075 for partition rappel_conso-0
[2024-04-25T13:34:20.470+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.485+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.489+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.491+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.495+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 15088 for partition rappel_conso-0
[2024-04-25T13:34:20.500+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.510+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.515+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.524+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.594+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 15588 for partition rappel_conso-0
[2024-04-25T13:34:20.603+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.626+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.632+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.640+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.649+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 15612 for partition rappel_conso-0
[2024-04-25T13:34:20.654+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.661+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.662+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.671+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.754+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 16112 for partition rappel_conso-0
[2024-04-25T13:34:20.759+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.771+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.773+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.777+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.781+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 16130 for partition rappel_conso-0
[2024-04-25T13:34:20.789+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.800+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.806+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.853+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 16630 for partition rappel_conso-0
[2024-04-25T13:34:20.866+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.900+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.905+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.914+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.920+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 16646 for partition rappel_conso-0
[2024-04-25T13:34:20.925+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.933+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:20.937+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:20.984+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 17146 for partition rappel_conso-0
[2024-04-25T13:34:20.989+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:20.999+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.002+0000] {docker.py:413} INFO - 24/04/25 13:34:20 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.005+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.009+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 17168 for partition rappel_conso-0
[2024-04-25T13:34:21.015+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.035+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.038+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.051+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.164+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 17653 for partition rappel_conso-0
[2024-04-25T13:34:21.168+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.184+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.187+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.225+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 18135 for partition rappel_conso-0
[2024-04-25T13:34:21.230+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.236+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.239+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.249+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.300+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 18635 for partition rappel_conso-0
[2024-04-25T13:34:21.304+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.329+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.330+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.333+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.334+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 18636 for partition rappel_conso-0
[2024-04-25T13:34:21.338+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.345+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.346+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.353+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.419+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 19136 for partition rappel_conso-0
[2024-04-25T13:34:21.426+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.438+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.439+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.447+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 19141 for partition rappel_conso-0
[2024-04-25T13:34:21.449+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.454+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.456+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.459+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.513+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 19641 for partition rappel_conso-0
[2024-04-25T13:34:21.515+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.531+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.533+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.545+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.546+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 19650 for partition rappel_conso-0
[2024-04-25T13:34:21.572+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.618+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.620+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.624+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.667+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 20136 for partition rappel_conso-0
[2024-04-25T13:34:21.681+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.695+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.699+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.700+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.745+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 20620 for partition rappel_conso-0
[2024-04-25T13:34:21.748+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.753+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.754+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.756+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.806+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 21120 for partition rappel_conso-0
[2024-04-25T13:34:21.809+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:21.821+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.824+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:21.826+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:21.828+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO KafkaConsumer: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to offset 21125 for partition rappel_conso-0
[2024-04-25T13:34:21.831+0000] {docker.py:413} INFO - 24/04/25 13:34:21 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to earliest offset of partition rappel_conso-0
[2024-04-25T13:34:22.337+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:22.339+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Seeking to latest offset of partition rappel_conso-0
[2024-04-25T13:34:22.340+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO SubscriptionState: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting offset for partition rappel_conso-0 to position FetchPosition{offset=21156, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[kafka:9092 (id: 0 rack: null)], epoch=0}}.
[2024-04-25T13:34:22.864+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO KafkaDataConsumer: From Kafka topicPartition=rappel_conso-0 groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor read 21156 records through 74 polls (polled  out 21156 records), taking 2974167762 nanos, during time span of 8271226761 nanos.
[2024-04-25T13:34:22.893+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO Executor: Finished task 0.0 in stage 1.0 (TID 1). 2444 bytes result sent to driver
[2024-04-25T13:34:22.944+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO TaskSetManager: Finished task 0.0 in stage 1.0 (TID 1) in 9747 ms on localhost (executor driver) (1/1)
[2024-04-25T13:34:22.945+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO TaskSchedulerImpl: Removed TaskSet 1.0, whose tasks have all completed, from pool
[2024-04-25T13:34:22.959+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: ShuffleMapStage 1 (start at NativeMethodAccessorImpl.java:0) finished in 9.869 s
[2024-04-25T13:34:22.964+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: looking for newly runnable stages
[2024-04-25T13:34:22.965+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: running: Set()
[2024-04-25T13:34:22.966+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: waiting: Set(ResultStage 2)
[2024-04-25T13:34:22.967+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: failed: Set()
[2024-04-25T13:34:22.981+0000] {docker.py:413} INFO - 24/04/25 13:34:22 INFO DAGScheduler: Submitting ResultStage 2 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0), which has no missing parents
[2024-04-25T13:34:23.597+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO MemoryStore: Block broadcast_2 stored as values in memory (estimated size 89.0 KiB, free 434.2 MiB)
[2024-04-25T13:34:23.606+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO MemoryStore: Block broadcast_2_piece0 stored as bytes in memory (estimated size 34.9 KiB, free 434.2 MiB)
[2024-04-25T13:34:23.609+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO BlockManagerInfo: Added broadcast_2_piece0 in memory on localhost:40991 (size: 34.9 KiB, free: 434.3 MiB)
[2024-04-25T13:34:23.615+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO SparkContext: Created broadcast 2 from broadcast at DAGScheduler.scala:1580
[2024-04-25T13:34:23.637+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO DAGScheduler: Submitting 200 missing tasks from ResultStage 2 (MapPartitionsRDD[18] at start at NativeMethodAccessorImpl.java:0) (first 15 tasks are for partitions Vector(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14))
[2024-04-25T13:34:23.643+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO TaskSchedulerImpl: Adding task set 2.0 with 200 tasks resource profile 0
[2024-04-25T13:34:23.722+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO TaskSetManager: Starting task 0.0 in stage 2.0 (TID 2) (localhost, executor driver, partition 0, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:23.731+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO TaskSetManager: Starting task 1.0 in stage 2.0 (TID 3) (localhost, executor driver, partition 1, NODE_LOCAL, 10414 bytes) 
24/04/25 13:34:23 INFO TaskSetManager: Starting task 2.0 in stage 2.0 (TID 4) (localhost, executor driver, partition 2, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:23.737+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO TaskSetManager: Starting task 3.0 in stage 2.0 (TID 5) (localhost, executor driver, partition 3, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:23.749+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO Executor: Running task 0.0 in stage 2.0 (TID 2)
[2024-04-25T13:34:23.752+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO Executor: Running task 2.0 in stage 2.0 (TID 4)
[2024-04-25T13:34:23.755+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO Executor: Running task 3.0 in stage 2.0 (TID 5)
[2024-04-25T13:34:23.755+0000] {docker.py:413} INFO - 24/04/25 13:34:23 INFO Executor: Running task 1.0 in stage 2.0 (TID 3)
[2024-04-25T13:34:24.098+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 1 (61.8 KiB) non-empty blocks including 1 (61.8 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.100+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 1 (61.8 KiB) non-empty blocks including 1 (61.8 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.102+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 1 (56.2 KiB) non-empty blocks including 1 (56.2 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.107+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 30 ms
[2024-04-25T13:34:24.120+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 1 (61.8 KiB) non-empty blocks including 1 (61.8 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 39 ms
[2024-04-25T13:34:24.124+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 27 ms
24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 41 ms
[2024-04-25T13:34:24.192+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO CodeGenerator: Code generated in 66.237781 ms
[2024-04-25T13:34:24.274+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO CodeGenerator: Code generated in 70.703465 ms
[2024-04-25T13:34:24.323+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO CodeGenerator: Code generated in 35.348378 ms
[2024-04-25T13:34:24.347+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.348+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 1 ms
[2024-04-25T13:34:24.367+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.372+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 12 ms
[2024-04-25T13:34:24.389+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO CodeGenerator: Code generated in 40.193905 ms
[2024-04-25T13:34:24.399+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.404+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 21 ms
[2024-04-25T13:34:24.411+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Getting 0 (0.0 B) non-empty blocks including 0 (0.0 B) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:24.412+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 12 ms
[2024-04-25T13:34:24.540+0000] {docker.py:413} INFO - 24/04/25 13:34:24 INFO CodeGenerator: Code generated in 125.09652 ms
[2024-04-25T13:34:26.643+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO CodeGenerator: Code generated in 29.969554 ms
[2024-04-25T13:34:26.936+0000] {docker.py:413} INFO - 24/04/25 13:34:26 ERROR Executor: Exception in task 1.0 in stage 2.0 (TID 3)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:26.939+0000] {docker.py:413} INFO - 24/04/25 13:34:26 ERROR Executor: Exception in task 0.0 in stage 2.0 (TID 2)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-03-0012','https://rappel.conso.gouv.fr/image/6d8c2e42-8f73-48be-990e-236ffc464dd9.jpg',NULL,NULL,'https://rappel.conso.gouv.fr/affichettePDF/21/Interne','https://rappel.conso.gouv.fr/fiche-rappel/21/Interne','2021-03-31','samedi 22 mai 2021','Alimentation','Lait et produits laitiers','NOS REGIONS ONT DU TALENT','VALENCAY AU LAIT CRU DE CHEVRE APPELLATION D''ORIGINE PROTEGEE 220 g','3564709006031 V028 Date de durabilite minimale 04/04/2021','blister transparent','Produit a conserver au refrigerateur','France entiere','E. LECLERC','presence de LISTERIA MONOCYTOGENES','0800874187','Remboursement','Listeria monocytogenes (agent responsable de la listeriose)','Les personnes qui auraient consomme les << produits >> mentionnes ci-dessus et qui presenteraient de la fievre, isolee ou accompagnee de maux de tete, et des courbatures, sont invitees a consulter leur medecin traitant en lui signalant cette consommation.  Des formes graves avec des complications neurologiques et des atteintes maternelles ou foetales chez la femme enceinte peuvent egalement parfois survenir. Les femmes enceintes ainsi que les personnes immunodeprimees et les personnes agees doivent etre particulierement attentives a ces symptomes. La listeriose est une maladie qui peut etre grave et dont le delai d''incubation peut aller jusqu''a huit semaines.
Ne plus consommer Ne plus utiliser le produit Rapporter le produit au point de vente Contacter le service consommateur','17/02/2021',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-03-0012) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-03-0012) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:26.940+0000] {docker.py:413} INFO - 24/04/25 13:34:26 ERROR Executor: Exception in task 2.0 in stage 2.0 (TID 4)
java.sql.BatchUpdateException: Batch entry 2 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-05-0183','https://rappel.conso.gouv.fr/image/f8feb1d0-a5ec-4381-bb58-4f36e773c8e0.jpg',NULL,'https://rappel.conso.gouv.fr/document/abdbfd8a-6104-467e-a710-399815c35c36/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/496/Interne','https://rappel.conso.gouv.fr/fiche-rappel/496/Interne','2021-05-21',NULL,'Alimentation','Aliments dietetiques et nutrition','First Iron Systems','Rip Cut 24h Stage 2 - 80 gelules. 
Numero du lot : F02707
Date de durabilite minimale :01/02/2024','F02707 Date de durabilite minimale 01/02/2024','Conditionnement dans une boite en carton. 
Poids : 98,6 g.','Produit a conserver a temperature ambiante','France entiere','Produit vendu par ligne par L&S SRL - 79 rue du romarin 7782 Ploegsteert via : https://www.first-iron-systems.com/language/fr/
La liste des points de vente en France est jointe a la presente alerte.','Depassement du taux maximal autorise d''oxyde d''ethylene dans une matiere premiere entrant dans la composition du produit.',NULL,'Autre (voir informations complementaires)','Presence de substance interdite','Ne plus consommer Contacter le point de vente','02/03/2020','07/05/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0183) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0183) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:26.975+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO TaskSetManager: Starting task 4.0 in stage 2.0 (TID 6) (localhost, executor driver, partition 4, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:26.977+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO Executor: Running task 4.0 in stage 2.0 (TID 6)
[2024-04-25T13:34:26.984+0000] {docker.py:413} INFO - 24/04/25 13:34:26 ERROR Executor: Exception in task 3.0 in stage 2.0 (TID 5)
java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-05-0251','https://rappel.conso.gouv.fr/image/15663247-9e6f-4715-853b-d2ea76407111.jpg https://rappel.conso.gouv.fr/image/c7dc09f2-6f38-4e84-a7ae-35ba04ecedf3.jpg https://rappel.conso.gouv.fr/image/24e6ff86-ae9d-4946-b9ad-242dc4292fc6.jpg https://rappel.conso.gouv.fr/image/debd0f64-d659-4e14-aa49-136bfafc4f10.jpg https://rappel.conso.gouv.fr/image/3f18c5a7-c186-45d2-a715-1a3ef2ed08f4.jpg',NULL,'https://rappel.conso.gouv.fr/document/1ec27d91-dec3-410c-ad5a-90434ffd881e/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/565/Interne','https://rappel.conso.gouv.fr/fiche-rappel/565/Interne','2021-06-02','mardi 8 juin 2021','Alimentation','Lait et produits laitiers','FERME DE LA VIEILLE RUE','Fromage blanc fermier, formage frais fermier campagne , fromage blanc battu myrtille , formage blanc battu vanille , fromage blanc battu fraise','FAB:18052021 Date limite de consommation 08/06/2021','pot 500gr','Produit a conserver au refrigerateur','Departements: OISE (60)','Cf: liste revendeurs','Presence de listeria <10',NULL,'Remboursement','Listeria monocytogenes (agent responsable de la listeriose)','Les personnes qui auraient consomme les << produits >> mentionnes ci-dessus et qui presenteraient de la fievre, isolee ou accompagnee de maux de tete, et des courbatures, sont invitees a consulter leur medecin traitant en lui signalant cette consommation.  Des formes graves avec des complications neurologiques et des atteintes maternelles ou foetales chez la femme enceinte peuvent egalement parfois survenir. Les femmes enceintes ainsi que les personnes immunodeprimees et les personnes agees doivent etre particulierement attentives a ces symptomes. La listeriose est une maladie qui peut etre grave et dont le delai d''incubation peut aller jusqu''a huit semaines.
Ne plus consommer','19/05/2021','22/05/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0251) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0251) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:26.986+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO TaskSetManager: Starting task 5.0 in stage 2.0 (TID 7) (localhost, executor driver, partition 5, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:26.990+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO TaskSetManager: Starting task 6.0 in stage 2.0 (TID 8) (localhost, executor driver, partition 6, NODE_LOCAL, 10414 bytes)
[2024-04-25T13:34:26.992+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO Executor: Running task 5.0 in stage 2.0 (TID 7)
[2024-04-25T13:34:26.992+0000] {docker.py:413} INFO - 24/04/25 13:34:26 INFO Executor: Running task 6.0 in stage 2.0 (TID 8)
[2024-04-25T13:34:27.000+0000] {docker.py:413} INFO - 24/04/25 13:34:26 WARN TaskSetManager: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:27.002+0000] {docker.py:413} INFO - 24/04/25 13:34:27 ERROR TaskSetManager: Task 1 in stage 2.0 failed 1 times; aborting job
[2024-04-25T13:34:27.012+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Cancelling stage 2
[2024-04-25T13:34:27.013+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Killing all running tasks in stage 2: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.020+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Stage 2 was cancelled
[2024-04-25T13:34:27.021+0000] {docker.py:413} INFO - 24/04/25 13:34:27 WARN TaskSetManager: Lost task 0.0 in stage 2.0 (TID 2) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-03-0012','https://rappel.conso.gouv.fr/image/6d8c2e42-8f73-48be-990e-236ffc464dd9.jpg',NULL,NULL,'https://rappel.conso.gouv.fr/affichettePDF/21/Interne','https://rappel.conso.gouv.fr/fiche-rappel/21/Interne','2021-03-31','samedi 22 mai 2021','Alimentation','Lait et produits laitiers','NOS REGIONS ONT DU TALENT','VALENCAY AU LAIT CRU DE CHEVRE APPELLATION D''ORIGINE PROTEGEE 220 g','3564709006031 V028 Date de durabilite minimale 04/04/2021','blister transparent','Produit a conserver au refrigerateur','France entiere','E. LECLERC','presence de LISTERIA MONOCYTOGENES','0800874187','Remboursement','Listeria monocytogenes (agent responsable de la listeriose)','Les personnes qui auraient consomme les << produits >> mentionnes ci-dessus et qui presenteraient de la fievre, isolee ou accompagnee de maux de tete, et des courbatures, sont invitees a consulter leur medecin traitant en lui signalant cette consommation.  Des formes graves avec des complications neurologiques et des atteintes maternelles ou foetales chez la femme enceinte peuvent egalement parfois survenir. Les femmes enceintes ainsi que les personnes immunodeprimees et les personnes agees doivent etre particulierement attentives a ces symptomes. La listeriose est une maladie qui peut etre grave et dont le delai d''incubation peut aller jusqu''a huit semaines.
Ne plus consommer Ne plus utiliser le produit Rapporter le produit au point de vente Contacter le service consommateur','17/02/2021',NULL,NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-03-0012) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-03-0012) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:27.028+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Executor: Executor is trying to kill task 4.0 in stage 2.0 (TID 6), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.029+0000] {docker.py:413} INFO - 24/04/25 13:34:27 WARN TaskSetManager: Lost task 2.0 in stage 2.0 (TID 4) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 2 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-05-0183','https://rappel.conso.gouv.fr/image/f8feb1d0-a5ec-4381-bb58-4f36e773c8e0.jpg',NULL,'https://rappel.conso.gouv.fr/document/abdbfd8a-6104-467e-a710-399815c35c36/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/496/Interne','https://rappel.conso.gouv.fr/fiche-rappel/496/Interne','2021-05-21',NULL,'Alimentation','Aliments dietetiques et nutrition','First Iron Systems','Rip Cut 24h Stage 2 - 80 gelules. 
Numero du lot : F02707
Date de durabilite minimale :01/02/2024','F02707 Date de durabilite minimale 01/02/2024','Conditionnement dans une boite en carton. 
Poids : 98,6 g.','Produit a conserver a temperature ambiante','France entiere','Produit vendu par ligne par L&S SRL - 79 rue du romarin 7782 Ploegsteert via : https://www.first-iron-systems.com/language/fr/
La liste des points de vente en France est jointe a la presente alerte.','Depassement du taux maximal autorise d''oxyde d''ethylene dans une matiere premiere entrant dans la composition du produit.',NULL,'Autre (voir informations complementaires)','Presence de substance interdite','Ne plus consommer Contacter le point de vente','02/03/2020','07/05/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0183) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0183) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:27.029+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO DAGScheduler: ResultStage 2 (start at NativeMethodAccessorImpl.java:0) failed in 3.666 s due to Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
24/04/25 13:34:27 INFO Executor: Executor is trying to kill task 5.0 in stage 2.0 (TID 7), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.030+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Executor: Executor is trying to kill task 6.0 in stage 2.0 (TID 8), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.035+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Getting 1 (74.8 KiB) non-empty blocks including 1 (74.8 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/04/25 13:34:27 WARN TaskSetManager: Lost task 3.0 in stage 2.0 (TID 5) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-05-0251','https://rappel.conso.gouv.fr/image/15663247-9e6f-4715-853b-d2ea76407111.jpg https://rappel.conso.gouv.fr/image/c7dc09f2-6f38-4e84-a7ae-35ba04ecedf3.jpg https://rappel.conso.gouv.fr/image/24e6ff86-ae9d-4946-b9ad-242dc4292fc6.jpg https://rappel.conso.gouv.fr/image/debd0f64-d659-4e14-aa49-136bfafc4f10.jpg https://rappel.conso.gouv.fr/image/3f18c5a7-c186-45d2-a715-1a3ef2ed08f4.jpg',NULL,'https://rappel.conso.gouv.fr/document/1ec27d91-dec3-410c-ad5a-90434ffd881e/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/565/Interne','https://rappel.conso.gouv.fr/fiche-rappel/565/Interne','2021-06-02','mardi 8 juin 2021','Alimentation','Lait et produits laitiers','FERME DE LA VIEILLE RUE','Fromage blanc fermier, formage frais fermier campagne , fromage blanc battu myrtille , formage blanc battu vanille , fromage blanc battu fraise','FAB:18052021 Date limite de consommation 08/06/2021','pot 500gr','Produit a conserver au refrigerateur','Departements: OISE (60)','Cf: liste revendeurs','Presence de listeria <10',NULL,'Remboursement','Listeria monocytogenes (agent responsable de la listeriose)','Les personnes qui auraient consomme les << produits >> mentionnes ci-dessus et qui presenteraient de la fievre, isolee ou accompagnee de maux de tete, et des courbatures, sont invitees a consulter leur medecin traitant en lui signalant cette consommation.  Des formes graves avec des complications neurologiques et des atteintes maternelles ou foetales chez la femme enceinte peuvent egalement parfois survenir. Les femmes enceintes ainsi que les personnes immunodeprimees et les personnes agees doivent etre particulierement attentives a ces symptomes. La listeriose est une maladie qui peut etre grave et dont le delai d''incubation peut aller jusqu''a huit semaines.
Ne plus consommer','19/05/2021','22/05/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0251) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-05-0251) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:27.038+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 7 ms
[2024-04-25T13:34:27.039+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO DAGScheduler: Job 0 failed: start at NativeMethodAccessorImpl.java:0, took 14.509635 s
[2024-04-25T13:34:27.053+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Getting 1 (51.1 KiB) non-empty blocks including 1 (51.1 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
[2024-04-25T13:34:27.056+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 4 ms
[2024-04-25T13:34:27.060+0000] {docker.py:413} INFO - 24/04/25 13:34:27 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
[2024-04-25T13:34:27.068+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Executor: Executor interrupted and killed task 4.0 in stage 2.0 (TID 6), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.069+0000] {docker.py:413} INFO - 24/04/25 13:34:27 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
[2024-04-25T13:34:27.070+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Executor: Executor interrupted and killed task 6.0 in stage 2.0 (TID 8), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.074+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Getting 1 (74.8 KiB) non-empty blocks including 1 (74.8 KiB) local and 0 (0.0 B) host-local and 0 (0.0 B) push-merged-local and 0 (0.0 B) remote blocks
24/04/25 13:34:27 INFO ShuffleBlockFetcherIterator: Started 0 remote fetches in 5 ms
[2024-04-25T13:34:27.075+0000] {docker.py:413} INFO - 24/04/25 13:34:27 ERROR ShuffleBlockFetcherIterator: Error occurred while fetching local blocks, null
[2024-04-25T13:34:27.077+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Executor: Executor interrupted and killed task 5.0 in stage 2.0 (TID 7), reason: Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
[2024-04-25T13:34:27.092+0000] {docker.py:413} INFO - 24/04/25 13:34:27 WARN TaskSetManager: Lost task 4.0 in stage 2.0 (TID 6) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-04-25T13:34:27.093+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-04-25T13:34:27.095+0000] {docker.py:413} INFO - 24/04/25 13:34:27 WARN TaskSetManager: Lost task 5.0 in stage 2.0 (TID 7) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-04-25T13:34:27.095+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-04-25T13:34:27.096+0000] {docker.py:413} INFO - 24/04/25 13:34:27 WARN TaskSetManager: Lost task 6.0 in stage 2.0 (TID 8) (localhost executor driver): TaskKilled (Stage cancelled: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:)
[2024-04-25T13:34:27.096+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO TaskSchedulerImpl: Removed TaskSet 2.0, whose tasks have all completed, from pool
[2024-04-25T13:34:27.448+0000] {docker.py:413} INFO - 2024-04-25 13:34:27,391:_call_proxy:ERROR:There was an exception while executing the Python Proxy on the Python Side.
Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 85, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more
[2024-04-25T13:34:27.501+0000] {docker.py:413} INFO - 24/04/25 13:34:27 ERROR MicroBatchExecution: Query [id = 962fa8a8-a11a-4d8f-ac9b-8f754ab0cce2, runId = 31be9b5b-b6c3-4b2a-86b3-9d4481b14453] terminated with error
py4j.Py4JException: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 85, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more


	at py4j.Protocol.getReturnValue(Protocol.java:476)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:108)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
[2024-04-25T13:34:27.502+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO AppInfoParser: App info kafka.admin.client for adminclient-1 unregistered
[2024-04-25T13:34:27.511+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Metrics: Metrics scheduler closed
[2024-04-25T13:34:27.513+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-04-25T13:34:27.513+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO Metrics: Metrics reporters closed
[2024-04-25T13:34:27.515+0000] {docker.py:413} INFO - 24/04/25 13:34:27 INFO MicroBatchExecution: Async log purge executor pool for query [id = 962fa8a8-a11a-4d8f-ac9b-8f754ab0cce2, runId = 31be9b5b-b6c3-4b2a-86b3-9d4481b14453] has been shutdown
[2024-04-25T13:34:27.905+0000] {docker.py:413} INFO - Traceback (most recent call last):
  File "/opt/bitnami/spark/spark_streaming.py", line 103, in <module>
[2024-04-25T13:34:27.907+0000] {docker.py:413} INFO - write_to_postgres()
  File "/opt/bitnami/spark/spark_streaming.py", line 99, in write_to_postgres
    start_streaming(df_final, spark=spark)
  File "/opt/bitnami/spark/spark_streaming.py", line 92, in start_streaming
    return query.awaitTermination()
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/streaming/query.py", line 221, in awaitTermination
[2024-04-25T13:34:27.913+0000] {docker.py:413} INFO - File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 185, in deco
pyspark.errors.exceptions.captured.StreamingQueryException
[2024-04-25T13:34:27.938+0000] {docker.py:413} INFO - : [STREAM_FAILED] Query [id = 962fa8a8-a11a-4d8f-ac9b-8f754ab0cce2, runId = 31be9b5b-b6c3-4b2a-86b3-9d4481b14453] terminated with exception: An exception was raised by the Python Proxy. Return Message: Traceback (most recent call last):
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/clientserver.py", line 617, in _call_proxy
    return_value = getattr(self.pool[obj_id], method)(*params)
                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 120, in call
    raise e
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/utils.py", line 117, in call
    self.func(DataFrame(jdf, wrapped_session_jdf), batch_id)
  File "/opt/bitnami/spark/spark_streaming.py", line 85, in <lambda>
    .write.jdbc(
           ^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/sql/readwriter.py", line 1984, in jdbc
    self.mode(mode)._jwrite.jdbc(url, table, jprop)
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/java_gateway.py", line 1322, in __call__
    return_value = get_return_value(
                   ^^^^^^^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/pyspark.zip/pyspark/errors/exceptions/captured.py", line 179, in deco
    return f(*a, **kw)
           ^^^^^^^^^^^
  File "/opt/bitnami/spark/python/lib/py4j-0.10.9.7-src.zip/py4j/protocol.py", line 326, in get_return_value
    raise Py4JJavaError(
py4j.protocol.Py4JJavaError: An error occurred while calling o69.jdbc.
: org.apache.spark.SparkException: Job aborted due to stage failure: Task 1 in stage 2.0 failed 1 times, most recent failure: Lost task 1.0 in stage 2.0 (TID 3) (localhost executor driver): java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more

Driver stacktrace:
	at org.apache.spark.scheduler.DAGScheduler.failJobAndIndependentStages(DAGScheduler.scala:2844)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2(DAGScheduler.scala:2780)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$abortStage$2$adapted(DAGScheduler.scala:2779)
	at scala.collection.mutable.ResizableArray.foreach(ResizableArray.scala:62)
	at scala.collection.mutable.ResizableArray.foreach$(ResizableArray.scala:55)
	at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.abortStage(DAGScheduler.scala:2779)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGScheduler.$anonfun$handleTaskSetFailed$1$adapted(DAGScheduler.scala:1242)
	at scala.Option.foreach(Option.scala:407)
	at org.apache.spark.scheduler.DAGScheduler.handleTaskSetFailed(DAGScheduler.scala:1242)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.doOnReceive(DAGScheduler.scala:3048)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2982)
	at org.apache.spark.scheduler.DAGSchedulerEventProcessLoop.onReceive(DAGScheduler.scala:2971)
	at org.apache.spark.util.EventLoop$$anon$1.run(EventLoop.scala:49)
	at org.apache.spark.scheduler.DAGScheduler.runJob(DAGScheduler.scala:984)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2398)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2419)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2438)
	at org.apache.spark.SparkContext.runJob(SparkContext.scala:2463)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$1(RDD.scala:1036)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:151)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:112)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:407)
	at org.apache.spark.rdd.RDD.foreachPartition(RDD.scala:1034)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.saveTable(JdbcUtils.scala:901)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcRelationProvider.createRelation(JdbcRelationProvider.scala:70)
	at org.apache.spark.sql.execution.datasources.SaveIntoDataSourceCommand.run(SaveIntoDataSourceCommand.scala:48)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult$lzycompute(commands.scala:75)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.sideEffectResult(commands.scala:73)
	at org.apache.spark.sql.execution.command.ExecutedCommandExec.executeCollect(commands.scala:84)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.$anonfun$applyOrElse$1(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:107)
	at org.apache.spark.sql.execution.QueryExecution$$anonfun$eagerlyExecuteCommands$1.applyOrElse(QueryExecution.scala:98)
	at org.apache.spark.sql.catalyst.trees.TreeNode.$anonfun$transformDownWithPruning$1(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.trees.CurrentOrigin$.withOrigin(origin.scala:76)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDownWithPruning(TreeNode.scala:461)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.org$apache$spark$sql$catalyst$plans$logical$AnalysisHelper$$super$transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning(AnalysisHelper.scala:267)
	at org.apache.spark.sql.catalyst.plans.logical.AnalysisHelper.transformDownWithPruning$(AnalysisHelper.scala:263)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.plans.logical.LogicalPlan.transformDownWithPruning(LogicalPlan.scala:32)
	at org.apache.spark.sql.catalyst.trees.TreeNode.transformDown(TreeNode.scala:437)
	at org.apache.spark.sql.execution.QueryExecution.eagerlyExecuteCommands(QueryExecution.scala:98)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted$lzycompute(QueryExecution.scala:85)
	at org.apache.spark.sql.execution.QueryExecution.commandExecuted(QueryExecution.scala:83)
	at org.apache.spark.sql.execution.QueryExecution.assertCommandExecuted(QueryExecution.scala:142)
	at org.apache.spark.sql.DataFrameWriter.runCommand(DataFrameWriter.scala:859)
	at org.apache.spark.sql.DataFrameWriter.saveToV1Source(DataFrameWriter.scala:388)
	at org.apache.spark.sql.DataFrameWriter.saveInternal(DataFrameWriter.scala:361)
	at org.apache.spark.sql.DataFrameWriter.save(DataFrameWriter.scala:248)
	at org.apache.spark.sql.DataFrameWriter.jdbc(DataFrameWriter.scala:756)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:244)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:374)
	at py4j.Gateway.invoke(Gateway.java:282)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:132)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.ClientServerConnection.sendCommand(ClientServerConnection.java:244)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:384)
	at py4j.CallbackClient.sendCommand(CallbackClient.java:356)
	at py4j.reflection.PythonProxyHandler.invoke(PythonProxyHandler.java:106)
	at jdk.proxy3/jdk.proxy3.$Proxy30.call(Unknown Source)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.PythonForeachBatchHelper$.$anonfun$callForeachBatch$1$adapted(ForeachBatchSink.scala:53)
	at org.apache.spark.sql.execution.streaming.sources.ForeachBatchSink.addBatch(ForeachBatchSink.scala:34)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$17(MicroBatchExecution.scala:732)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$6(SQLExecution.scala:125)
	at org.apache.spark.sql.execution.SQLExecution$.withSQLConfPropagated(SQLExecution.scala:201)
	at org.apache.spark.sql.execution.SQLExecution$.$anonfun$withNewExecutionId$1(SQLExecution.scala:108)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.SQLExecution$.withNewExecutionId(SQLExecution.scala:66)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runBatch$16(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runBatch(MicroBatchExecution.scala:729)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$2(MicroBatchExecution.scala:286)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken(ProgressReporter.scala:427)
	at org.apache.spark.sql.execution.streaming.ProgressReporter.reportTimeTaken$(ProgressReporter.scala:425)
	at org.apache.spark.sql.execution.streaming.StreamExecution.reportTimeTaken(StreamExecution.scala:67)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.$anonfun$runActivatedStream$1(MicroBatchExecution.scala:249)
	at org.apache.spark.sql.execution.streaming.SingleBatchExecutor.execute(TriggerExecutor.scala:39)
	at org.apache.spark.sql.execution.streaming.MicroBatchExecution.runActivatedStream(MicroBatchExecution.scala:239)
	at org.apache.spark.sql.execution.streaming.StreamExecution.$anonfun$runStream$1(StreamExecution.scala:311)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.sql.SparkSession.withActive(SparkSession.scala:900)
	at org.apache.spark.sql.execution.streaming.StreamExecution.org$apache$spark$sql$execution$streaming$StreamExecution$$runStream(StreamExecution.scala:289)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.$anonfun$run$1(StreamExecution.scala:211)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
	at org.apache.spark.JobArtifactSet$.withActiveJobArtifactState(JobArtifactSet.scala:94)
	at org.apache.spark.sql.execution.streaming.StreamExecution$$anon$1.run(StreamExecution.scala:211)
Caused by: java.sql.BatchUpdateException: Batch entry 1 INSERT INTO rappel_conso_table ("reference_fiche","liens_vers_les_images","lien_vers_la_liste_des_produits","lien_vers_la_liste_des_distributeurs","lien_vers_affichette_pdf","lien_vers_la_fiche_rappel","date_de_publication","date_de_fin_de_la_procedure_de_rappel","categorie_de_produit","sous_categorie_de_produit","nom_de_la_marque_du_produit","noms_des_modeles_ou_references","identification_des_produits","conditionnements","temperature_de_conservation","zone_geographique_de_vente","distributeurs","motif_du_rappel","numero_de_contact","modalites_de_compensation","risques_pour_le_consommateur","recommandations_sante","date_debut_commercialisation","date_fin_commercialisation","informations_complementaires") VALUES ('2021-04-0192','https://rappel.conso.gouv.fr/image/809f54df-cbe4-416d-8932-ee59811bfa9f.jpg',NULL,'https://rappel.conso.gouv.fr/document/4c5ad2db-3d0d-4e43-9313-3905444c0918/Interne/ListeDesDistributeurs','https://rappel.conso.gouv.fr/affichettePDF/252/Interne','https://rappel.conso.gouv.fr/fiche-rappel/252/Interne','2021-06-04','mercredi 19 mai 2021','Alimentation','Viandes','MAISON CLEMENS','CHIPOLATAS VIANDE DE PORC FRANCAISE','2961375018602 21151607 Date limite de consommation 28/04/2021','Produit vendu en Vrac au rayon TRAD','Produit a conserver au refrigerateur','France entiere','E.leclerc Bruges','Analyses bacteriologiques : presence de Salmonelles','0556161000','Remboursement','Salmonella spp (agent responsable de la salmonellose)
Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de','Les toxi-infections alimentaires causees par les salmonelles se traduisent par des troubles gastro-intestinaux (diarrhee, vomissements) d''apparition brutale souvent accompagnes de fievre et de maux de tete qui surviennent generalement 6h a 72h apres la consommation des produits contamines.  Ces symptomes peuvent etre plus prononces chez les jeunes enfants, les femmes enceintes, les sujets immunodeprimes et les personnes agees. Les personnes qui auraient consomme ces produits et qui presenteraient ces symptomes sont invitees a consulter leur medecin traitant en lui signalant cette consommation. En l''absence de symptomes dans les 7 jours apres la consommation des produits concernes, il est inutile de s''inquieter et de consulter un medecin. Si le produit doit subir une cuisson avant consommation : la cuisson a coeur des produits (oeufs durs, patisseries, viandes de volailles...) a +65degC permet de detruire ces bacteries et de prevenir les consequences d''une telle contamination.
Rapporter le produit au point de vente','04/04/2021','18/04/2021',NULL) was aborted: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.  Call getNextException to see other errors in the batch.
	at org.postgresql.jdbc.BatchResultHandler.handleError(BatchResultHandler.java:165)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2367)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:560)
	at org.postgresql.jdbc.PgStatement.internalExecuteBatch(PgStatement.java:893)
	at org.postgresql.jdbc.PgStatement.executeBatch(PgStatement.java:916)
	at org.postgresql.jdbc.PgPreparedStatement.executeBatch(PgPreparedStatement.java:1684)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.savePartition(JdbcUtils.scala:751)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1(JdbcUtils.scala:902)
	at org.apache.spark.sql.execution.datasources.jdbc.JdbcUtils$.$anonfun$saveTable$1$adapted(JdbcUtils.scala:901)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2(RDD.scala:1036)
	at org.apache.spark.rdd.RDD.$anonfun$foreachPartition$2$adapted(RDD.scala:1036)
	at org.apache.spark.SparkContext.$anonfun$runJob$5(SparkContext.scala:2438)
	at org.apache.spark.scheduler.ResultTask.runTask(ResultTask.scala:93)
	at org.apache.spark.TaskContext.runTaskWithListeners(TaskContext.scala:161)
	at org.apache.spark.scheduler.Task.run(Task.scala:141)
	at org.apache.spark.executor.Executor$TaskRunner.$anonfun$run$4(Executor.scala:620)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally(SparkErrorUtils.scala:64)
	at org.apache.spark.util.SparkErrorUtils.tryWithSafeFinally$(SparkErrorUtils.scala:61)
	at org.apache.spark.util.Utils$.tryWithSafeFinally(Utils.scala:94)
	at org.apache.spark.executor.Executor$TaskRunner.run(Executor.scala:623)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: org.postgresql.util.PSQLException: ERROR: duplicate key value violates unique constraint "rappel_conso_table_pkey"
  Detail: Key (reference_fiche)=(2021-04-0192) already exists.
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2676)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2366)
	... 21 more


2024-04-25 13:34:27,936:close:INFO:Closing down clientserver connection
[2024-04-25T13:34:28.028+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Resetting generation and member id due to: consumer pro-actively leaving the group
[2024-04-25T13:34:28.029+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO ConsumerCoordinator: [Consumer clientId=consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1, groupId=spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor] Request joining group due to: consumer pro-actively leaving the group
[2024-04-25T13:34:28.029+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO Metrics: Metrics scheduler closed
[2024-04-25T13:34:28.029+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO Metrics: Closing reporter org.apache.kafka.common.metrics.JmxReporter
[2024-04-25T13:34:28.029+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO Metrics: Metrics reporters closed
[2024-04-25T13:34:28.042+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO AppInfoParser: App info kafka.consumer for consumer-spark-kafka-source-87ce64b4-9141-42b4-a848-42abcd315a6f--817423400-executor-1 unregistered
[2024-04-25T13:34:28.043+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO SparkContext: Invoking stop() from shutdown hook
[2024-04-25T13:34:28.044+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO SparkContext: SparkContext is stopping with exitCode 0.
[2024-04-25T13:34:28.062+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO SparkUI: Stopped Spark web UI at http://localhost:4040
[2024-04-25T13:34:28.080+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO MapOutputTrackerMasterEndpoint: MapOutputTrackerMasterEndpoint stopped!
[2024-04-25T13:34:28.140+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO MemoryStore: MemoryStore cleared
24/04/25 13:34:28 INFO BlockManager: BlockManager stopped
[2024-04-25T13:34:28.152+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO BlockManagerMaster: BlockManagerMaster stopped
[2024-04-25T13:34:28.153+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO OutputCommitCoordinator$OutputCommitCoordinatorEndpoint: OutputCommitCoordinator stopped!
[2024-04-25T13:34:28.184+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO SparkContext: Successfully stopped SparkContext
24/04/25 13:34:28 INFO ShutdownHookManager: Shutdown hook called
24/04/25 13:34:28 INFO ShutdownHookManager: Deleting directory /tmp/temporary-26ea5577-152c-44e0-b22b-36d16a1698a5
[2024-04-25T13:34:28.196+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-2e546654-9494-405b-9fb6-b7bb0beb9365
[2024-04-25T13:34:28.208+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71
[2024-04-25T13:34:28.215+0000] {docker.py:413} INFO - 24/04/25 13:34:28 INFO ShutdownHookManager: Deleting directory /tmp/spark-00b43f68-5ad6-4d63-a665-766f70e9bb71/pyspark-b3365eaa-88c2-4535-8661-7fc4575c0681
[2024-04-25T13:34:28.609+0000] {taskinstance.py:1937} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 268, in _raise_for_status
    response.raise_for_status()
  File "/home/airflow/.local/lib/python3.8/site-packages/requests/models.py", line 1021, in raise_for_status
    raise HTTPError(http_error_msg, response=self)
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http://docker-proxy:2375/v1.45/containers/create

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 348, in _run_image
    return self._run_image_with_mounts([*self.mounts, tmp_mount], add_tmp_variable=True)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 375, in _run_image_with_mounts
    self.container = self.cli.create_container(
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 431, in create_container
    return self.create_container_from_config(config, name, platform)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/container.py", line 448, in create_container_from_config
    return self._result(res, True)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 274, in _result
    self._raise_for_status(response)
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/api/client.py", line 270, in _raise_for_status
    raise create_api_error_from_http_exception(e) from e
  File "/home/airflow/.local/lib/python3.8/site-packages/docker/errors.py", line 39, in create_api_error_from_http_exception
    raise cls(e, response=response, explanation=explanation) from e
docker.errors.APIError: 400 Client Error for http://docker-proxy:2375/v1.45/containers/create: Bad Request ("invalid mount config for type "bind": bind source path does not exist: /tmp/airflowtmpxtz5sv96")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 486, in execute
    return self._run_image()
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 357, in _run_image
    return self._run_image_with_mounts(self.mounts, add_tmp_variable=False)
  File "/home/airflow/.local/lib/python3.8/site-packages/airflow/providers/docker/operators/docker.py", line 421, in _run_image_with_mounts
    raise DockerContainerFailedException(f"Docker container failed: {result!r}", logs=log_lines)
airflow.providers.docker.exceptions.DockerContainerFailedException: Docker container failed: {'StatusCode': 1}
[2024-04-25T13:34:28.615+0000] {taskinstance.py:1400} INFO - Marking task as FAILED. dag_id=kafka_spark_dag, task_id=pyspark_consumer, execution_date=20240425T133251, start_date=20240425T133334, end_date=20240425T133428
[2024-04-25T13:34:28.634+0000] {standard_task_runner.py:104} ERROR - Failed to execute job 22 for task pyspark_consumer (Docker container failed: {'StatusCode': 1}; 3346)
[2024-04-25T13:34:28.658+0000] {local_task_job_runner.py:228} INFO - Task exited with return code 1
[2024-04-25T13:34:28.680+0000] {taskinstance.py:2778} INFO - 0 downstream tasks scheduled from follow-on schedule check
